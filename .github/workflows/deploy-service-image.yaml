name: Deploy Service Image
on:
  workflow_dispatch:
    inputs:
      service_name:
        description: "Name of the service"
        required: true
jobs:
  deploy-image:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Save private key
        run: 'echo "$SSH_KEY" > ~/cloud_ssh_private_key; chmod 600 ~/cloud_ssh_private_key'
        shell: bash
        env:
          SSH_KEY: ${{ secrets.CLOUD_SSH_PRIVATE_KEY }}
      - name: Deploy new image to the cloud
        run: ansible-playbook -vvvv --private-key=~/cloud_ssh_private_key cloud_master.yaml
        working-directory: "${{ github.workspace }}/ansible/"
  recreate-team-vms:
    runs-on: self-hosted
    needs: [deploy-image]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Save private key
        run: 'echo "$SSH_KEY" > ~/cloud_ssh_private_key; chmod 600 ~/cloud_ssh_private_key'
        shell: bash
        env:
          SSH_KEY: ${{ secrets.CLOUD_SSH_PRIVATE_KEY }}
      - name: Recreate team VMs
        run: ssh -i ~/cloud_ssh_private_key root@167.71.2.106 '/bin/bash -c "cd /cloud/backend; service_id=$(grep -E ^${{ github.event.inputs.service_name }}\s db/services.txt | awk '{print $2}'); for team in `seq 1 2`; do ./restore_vm_from_snapshot.py $team $service_id init; done"'