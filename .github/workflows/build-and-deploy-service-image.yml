name: Build and Deploy Service Image
on:
  workflow_dispatch:
    inputs:
      service_name:
        description: "Name of the service"
        required: true
jobs:
  build-image:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        uses: BSFishy/pip-action@v1
        with:
          requirements: vuln_images/requirements.txt
      - name: Build the image
        run: python3 build_image.py ../services/${{ github.event.inputs.service_name }}/deploy.yaml
        working-directory: "${{ github.workspace }}/vuln_images/"
        env:
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          add: ansible/roles/cloud_master/files/api_srv/do_vulnimages.json
          message: "${{ github.event.inputs.service_name }}] New image built on ${{ github.sha }}"
          committer_name: GitHub Actions
          committer_email: actions@github.com
  deploy-image:
    runs-on: self-hosted
    needs: [build-image]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Save private key
        run: 'echo "$SSH_KEY" > ~/cloud_ssh_private_key; chmod 600 ~/cloud_ssh_private_key'
        shell: bash
        env:
          SSH_KEY: ${{ secrets.CLOUD_SSH_PRIVATE_KEY }}
      - name: Copy a-la-secret files
        run: |-
          cp ~/oblaka.mp3 "${{ github.workspace }}/ansible/roles/cloud_master/files/wsgi/oblaka.mp3";
          cp ~/hitb2021_do_deploy "${{ github.workspace }}/ansible/roles/cloud_master/files/api_srv/hitb2021_do_deploy";
          cp ~/do_tokens.py "${{ github.workspace }}/ansible/roles/cloud_master/files/api_srv/do_tokens.py";
      - name: Deploy new image to the cloud
        run: ansible-playbook -vv --private-key=~/cloud_ssh_private_key cloud_master.yaml
        working-directory: "${{ github.workspace }}/ansible/"
  recreate-team-vms:
    runs-on: self-hosted
    needs: [deploy-image]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Save private key
        run: 'echo "$SSH_KEY" > ~/cloud_ssh_private_key; chmod 600 ~/cloud_ssh_private_key'
        shell: bash
        env:
          SSH_KEY: ${{ secrets.CLOUD_SSH_PRIVATE_KEY }}
      - name: Recreate team VMs
        run: ssh -i ~/cloud_ssh_private_key root@167.71.2.106 '/bin/bash -c "cd /cloud/backend; service_id=$(grep -E ^${{ github.event.inputs.service_name }}\s db/services.txt | awk '{print $2}'); for team in `seq 1 2`; do ./restore_vm_from_snapshot.py $team $service_id init; done"'