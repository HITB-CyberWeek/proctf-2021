openapi: 3.0.1
info:
  title: Genealogy Tree Service
  description: |-
    This is a simple API for storing genealogy trees. Service is written
    in C++, uses PostgreSQL and communicates via JSONs. Also it uses brotobufs â€”
    it's like protobufs but more cooler! Unfortunately some code generated by brotoc
    has been lost :( 
      
    See the full list of available endpoints below.

    Unfortunately, cookie authentication doesn't work in Swagger UI
    (see [this issue](https://github.com/swagger-api/swagger-js/issues/1163)). So you need to set cookies
    in your browser manually to use "Try it out" feature for endpoints protected by the authentication.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
tags:
- name: user
  description: Registration and login
- name: tree
  description: Operations with genealogy trees
- name: person
  description: Operations with persons in genealogy tree
- name: archive
  description: Exporting and checking signed archive
paths:
  /users:
    post:
      tags:
      - user
      summary: Create a new user
      description: Simple registration
      operationId: createUser
      requestBody:
        description: A JSON object containing login and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: User has been created
          headers:
            Set-Cookie:
              schema:
                type: string
                example: user_id=10; Path=/, user_hash=bd3bed9372e761af8132968f958bde51; Path=/
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                example:
                  status: ok
                  user:
                    id: 1
                    login: andgein
        409:
          description: User with same login already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: "error"
                message: "User with login andgein already exists"
  /login:
    post:
      tags:
      - user
      summary: Authenticate
      description: Simple login
      operationId: login
      requestBody:
        description:
          A JSON object containing login and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        200:
          description: 
            Successfully authenticated.
            The user id is returned in a cookie named `user_id`, signed by a cookie named `user_hash`. You need to include these cookies in subsequent requests.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: user_id=10; Path=/, user_hash=bd3bed9372e761af8132968f958bde51; Path=/
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                example:
                  status: ok
                  user:
                    id: 1
                    login: andgein
        412:
          description: Invalid login or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                UserDoesntExist:
                  value:
                    status: "error"
                    message: "User with login andgein doesn't exist"
                InvalidPassword:
                  value:
                    status: "error"
                    message: "Invalid password for user andgein"
  /users/me:
    get:
      tags:
      - user
      summary: Get me
      description: Get information about current user
      operationId: getMe
      security:
        - userId
        - userHash
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                example:
                  status: ok
                  user:
                    id: 1
                    login: andgein                    
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
  /tree:
    post:
      tags:
      - tree
      summary: Create a new genealogy tree
      description: Every user may have only one genealogy tree
      operationId: createTree
      security:
        - userId
        - userHash
      requestBody:
        description: A JSON object containing tree's information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTreeRequest'
            example:
              title: "My genealogy tree"
              description: "The genealogy tree of @andgein"
              person: 1              
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  tree:              
                    $ref: '#/components/schemas/Tree'
              example:
                status: "ok"
                tree: 
                  id: 1
                  person:
                    id: 1
                    title: "Mr"
                    first_name: "Andrew"
                    middle_name: "Crazy"
                    last_name: "Gein"
                    photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
                    birth_date: 684460800
                    death_date: 7952342400
                    parents:
                      - id: 2
                        title: "Mr"
                        first_name: "Alexander"
                        middle_name: ""
                        last_name: "Gein"
                        photo_url: ""
                        birth_date: 2419200
                        death_date: 7952342400
                        parents: []
                  title: "My genealogy tree"
                  description: "The genealogy tree of @andgein"
                  owners: [1, 2, 10]                
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: You don't have the genealogy tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Your genealogy tree doesn't exist, create it first"  
    get:
      tags:
      - tree
      summary: Get my genealogy tree
      operationId: getTree
      security:
        - userId
        - userHash      
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  tree:              
                    $ref: '#/components/schemas/Tree'
              example:
                status: "ok"
                tree: 
                  id: 1
                  person:
                    id: 1
                    title: "Mr"
                    first_name: "Andrew"
                    middle_name: "Crazy"
                    last_name: "Gein"
                    photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
                    birth_date: 684460800
                    death_date: 7952342400
                    parents:
                      - id: 2
                        title: "Mr"
                        first_name: "Alexander"
                        middle_name: ""
                        last_name: "Gein"
                        photo_url: ""
                        birth_date: 2419200
                        death_date: 7952342400
                        parents: []
                  title: "My genealogy tree"
                  description: "The genealogy tree of @andgein"
                  owners: [1, 2, 10]
            
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: You don't have the genealogy tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Your genealogy tree doesn't exist, create it first"
    put:
      tags:
      - tree
      summary: Update my genealogy tree
      operationId: updateTree
      security:
        - userId
        - userHash      
      requestBody:
        description: Tree object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTreeRequest'
            example:
              description: "The genealogy tree of @andgein"
              person: 1
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  tree:              
                    $ref: '#/components/schemas/Tree'
              example:
                status: "ok"
                tree: 
                  id: 1
                  person:
                    id: 1
                    title: "Mr"
                    first_name: "Andrew"
                    middle_name: "Crazy"
                    last_name: "Gein"
                    photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
                    birth_date: 684460800
                    death_date: 7952342400
                    parents:
                      - id: 2
                        title: "Mr"
                        first_name: "Alexander"
                        middle_name: ""
                        last_name: "Gein"
                        photo_url: ""
                        birth_date: 2419200
                        death_date: 7952342400
                        parents: []
                  title: "My genealogy tree"
                  description: "The genealogy tree of @andgein"
                  owners: [1, 2, 10]                
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: You don't have the genealogy tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Your genealogy tree doesn't exist, create it first"
  /tree/owners:
    put:
      tags:
      - tree
      summary: Update tree's owners. Not used now, but implemented for the amazing future.
      operationId: updateTreeOwners
      security:
        - userId
        - userHash      
      requestBody:
        description: A JSON array containing owners' ids
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "integer"
            example:
              [1, 2, 10]
        required: true  
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  tree:              
                    $ref: '#/components/schemas/Tree'
              example:
                status: "ok"
                tree: 
                  id: 1
                  person:
                    id: 1
                    title: "Mr"
                    first_name: "Andrew"
                    middle_name: "Crazy"
                    last_name: "Gein"
                    photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
                    birth_date: 684460800
                    death_date: 7952342400
                    parents:
                      - id: 2
                        title: "Mr"
                        first_name: "Alexander"
                        middle_name: ""
                        last_name: "Gein"
                        photo_url: ""
                        birth_date: 2419200
                        death_date: 7952342400
                        parents: []
                  title: "My genealogy tree"
                  description: "The genealogy tree of @andgein"
                  owners: [1, 2, 10]
            
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: You don't have the genealogy tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Your genealogy tree doesn't exist, create it first"
  /tree/archive:
    get:
      tags:
      - archive
      summary: Download signed tree archive
      operationId: getTreeArchive
      security:
        - userId
        - userHash      
      responses:
        200:
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: You don't have the genealogy tree
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Your genealogy tree doesn't exist, create it first"
    post:
      tags:
      - archive
      summary: Check signed tree archive
      operationId: checkTreeArchive
      requestBody:
        description: A binary archive downloaded from /tree/archive
        content:
          application/octet-stream:
              schema:
                type: string
                format: binary          
        required: true
      responses:
        200:
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary              
        418:
          description: "Invalid signature"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Invalid signature under your archive"

  /tree/persons:
    post:
      tags:
      - person
      summary: Create a new person
      description: Creates a new person which can be added to the genealogy tree
      operationId: createPeron
      security:
        - userId
        - userHash      
      requestBody:
        description: Person object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRequest'
            example:
              title: "Mr"
              first_name: "Andrew"
              middle_name: "Crazy"
              last_name: "Gein"
              photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
              birth_date: 684460800
              death_date: 7952342400
              first_parent: 2
              second_parent: null
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  person:              
                    $ref: '#/components/schemas/Person'
              example:
                status: "ok"
                person:
                  id: 10
                  title: "Mr"
                  first_name: "Andrew"
                  middle_name: "Crazy"
                  last_name: "Gein"
                  photo_url: "https://avatars.githubusercontent.com/u/1853477?v=4"
                  birth_date: 684460800
                  death_date: 7952342400
                  parents:
                    - id: 2
                      title: "Mr"
                      first_name: "Alexander"
                      middle_name: ""
                      last_name: "Gein"
                      photo_url: ""
                      birth_date: 2419200
                      death_date: 7952342400
                      parents: []
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        412:
          description: Invalid parent id
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "Invalid first parent id"
  /tree/persons/{personId}:
    delete:
      tags:
      - person
      summary: Delete the person
      description: Deletes information about the person
      operationId: deletePerson
      security:
        - userId
        - userHash      
      parameters:
        - in: path
          name: personId
          schema:
            type: integer
          required: true
          description: Numeric ID of the person to get
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:              
                    type: string
              example:
                status: "ok"
                message: "Person has been deleted"
        401:
          description: You're not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                example:
                  status: "error"
                  message: "You're not authenticated"
        404:
          description: Person not found or is owned not by you
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: "error"
                message: "Person 10 not found or is owned not by you"
components:
  securitySchemes:
    userId:
      type: apiKey
      in: cookie
      name: user_id
    userHash:
      type: apiKey
      in: cookie
      name: user_hash
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
    Person:
      type: object
      properties:
        title:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        photo_url:
          type: string
        birth_date:
          type: integer
          format: int64
        death_date:
          type: integer
          format: int64
        parents:
          type: array
          items:
            $ref: '#/components/schemas/Person'
    Tree:
      type: object
      properties:
        status:
          type: string
        tree:
          type: object
          properties:
            id:
              type: integer
              format: int64
            person:
              $ref: '#/components/schemas/Person'
            title:
              type: string
            description:
              type: string
            owners:
              type: array
              items:
                type: integer
                format: int64          
    RegistrationRequest:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    CreateTreeRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        person:
          type: integer
          format: int64
    UpdateTreeRequest:
      type: object
      properties:
        description:
          type: string
        person:
          type: integer
          format: int64
    CreatePersonRequest:
      type: object
      properties:
        title:
          type: string
        first_name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        photo_url:
          type: string
        birth_date:
          type: integer
          format: int64
        death_date:
          type: integer
          format: int64
        first_parent:
          type: integer
          format: int64
          nullable: true
          description: "The ID of the first parent, or null"
        second_parent:
          type: integer
          format: int64
          nullable: true          
          description: "The ID of the first parent, or null"
